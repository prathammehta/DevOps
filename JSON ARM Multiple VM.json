{
  "properties": {
    "template": {
      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "adminUsername": {
          "type": "string",
          "metadata": {
            "description": "Admin username for VM"
          }
        },
        "adminPassword": {
          "type": "securestring",
          "metadata": {
            "description": "Admin password for VM"
          }
        },
        "newStorageAccountName": {
          "type": "string",
          "metadata": {
            "description": "Unique storage account name"
          }
        },
        "testNumberOfInstances": {
          "type": "int",
          "defaultValue": 0,
          "metadata": {
            "description": "Number of test VMs to deploy"
          }
        },
        "buildNumberOfInstances": {
          "type": "int",
          "defaultValue": 2,
          "metadata": {
            "description": "Number of build VMs to deploy"
          }
        },
        "devNumberOfInstances": {
          "type": "int",
          "defaultValue": 0,
          "metadata": {
            "description": "Number of dev VMs to deploy"
          }
        },
        "location": {
          "type": "string",
          "allowedValues": [
            "West US",
            "East US",
            "West Europe",
            "East Asia",
            "Southeast Asia"
          ],
          "metadata": {
            "description": "Location to deploy the VM in"
          }
        },
        "vmSize": {
          "type": "string",
          "metadata": {
            "description": "Size of the Virtual Machine."
          }
        },
        "imagePublisher": {
          "type": "string",
          "defaultValue": "MicrosoftWindowsServer",
          "metadata": {
            "description": "Image Publisher"
          }
        },
        "imageOffer": {
          "type": "string",
          "defaultValue": "WindowsServer",
          "metadata": {
            "description": "Image Offer"
          }
        },
        "imageSKU": {
          "type": "string",
          "defaultValue": "2012-R2-Datacenter",
          "metadata": {
            "description": "Image SKU"
          }
        },
        "devmodulesUrl": {
          "type": "string",
          "defaultValue": "https://github.com/prathammehta/DevOps/raw/master/ContosoWebsite.ps1.zip",
          "metadata": {
            "description": "URL for the DSC configuration module. NOTE: Can be a Github url(raw) to the zip file"
          }
        },
        "devconfigurationFunction": {
          "type": "string",
          "defaultValue": "ContosoWebsite.ps1\\ContosoWebsite",
          "metadata": {
            "description": "DSC configuration function to call"
          }
        },
        "testmodulesUrl": {
          "type": "string",
          "defaultValue": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-iis-server-windows-vm/ContosoWebsite.ps1.zip",
          "metadata": {
            "description": "URL for the DSC configuration module. NOTE: Can be a Github url(raw) to the zip file"
          }
        },
        "testconfigurationFunction": {
          "type": "string",
          "defaultValue": "ContosoWebsite.ps1\\ContosoWebsite",
          "metadata": {
            "description": "DSC configuration function to call"
          }
        },

        "buildmodulesUrl": {
          "type": "string",
          "defaultValue": "https://github.com/JSam10/DevOps/raw/master/ContosoWebsite.ps1.zip",
          "metadata": {
            "description": "URL for the DSC configuration module. NOTE: Can be a Github url(raw) to the zip file"
          }
        },
        "buildconfigurationFunction": {
          "type": "string",
          "defaultValue": "ContosoWebsite.ps1\\ContosoWebsite",
          "metadata": {
            "description": "DSC configuration function to call"
          }
        }
      },
      "variables": {
        "virtualNetworkName": "myVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "addressPrefix": "10.0.0.0/16",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
        "vmStorageAccountContainerName": "vhds",
        "vmExtensionName": "dscExtension"
      },
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts",
          "name": "[parameters('newStorageAccountName')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[parameters('location')]",
          "properties": {
            "accountType": "Standard_LRS"
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/virtualNetworks",
          "name": "[variables('virtualNetworkName')]",
          "location": "[parameters('location')]",
          "properties": {
            "addressSpace": {
              "addressPrefixes": [
                "[variables('addressPrefix')]"
              ]
            },
            "subnets": [
              {
                "name": "[variables('subnet1Name')]",
                "properties": {
                  "addressPrefix": "[variables('subnet1Prefix')]"
                }
              }
            ]
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[concat('dev','publicIP', copyIndex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "publicIPLoop",
            "count": "[parameters('devNumberOfInstances')]"
          },
          "properties": {
            "publicIPAllocationMethod": "Dynamic"
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[concat('test','publicIP', copyIndex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "publicIPLoop",
            "count": "[parameters('testNumberOfInstances')]"
          },
          "properties": {
            "publicIPAllocationMethod": "Dynamic"
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[concat('build','publicIP', copyIndex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "publicIPLoop",
            "count": "[parameters('buildNumberOfInstances')]"
          },
          "properties": {
            "publicIPAllocationMethod": "Dynamic"
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/networkInterfaces",
          "name": "[concat('devnic', copyindex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "nicLoop",
            "count": "[parameters('devNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
            "[concat('Microsoft.Network/publicIPAddresses/', 'devpublicIP', copyindex())]"
          ],
          "properties": {
            "ipConfigurations": [
              {
                "name": "devipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('devpublicIP', copyindex()))]"
                  },
                  "subnet": {
                    "id": "[variables('subnet1Ref')]"
                  }
                }
              }
            ]
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/networkInterfaces",
          "name": "[concat('testnic', copyindex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "nicLoop",
            "count": "[parameters('testNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
            "[concat('Microsoft.Network/publicIPAddresses/', 'testpublicIP', copyindex())]"
          ],
          "properties": {
            "ipConfigurations": [
              {
                "name": "testipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('testpublicIP', copyindex()))]"
                  },
                  "subnet": {
                    "id": "[variables('subnet1Ref')]"
                  }
                }
              }
            ]
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Network/networkInterfaces",
          "name": "[concat('buildnic', copyindex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "nicLoop",
            "count": "[parameters('buildNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
            "[concat('Microsoft.Network/publicIPAddresses/', 'buildpublicIP', copyindex())]"
          ],
          "properties": {
            "ipConfigurations": [
              {
                "name": "buildfipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat('buildpublicIP', copyindex()))]"
                  },
                  "subnet": {
                    "id": "[variables('subnet1Ref')]"
                  }
                }
              }
            ]
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "[concat('devvm', copyIndex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "virtualMachineLoop",
            "count": "[parameters('devNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', 'devnic', copyindex())]",
            "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
          ],
          "properties": {
            "hardwareProfile": {
              "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
              "computername": "[concat('devvm', copyIndex())]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "[parameters('imagePublisher')]",
                "offer": "[parameters('imageOffer')]",
                "sku": "[parameters('imageSKU')]",
                "version": "latest"
              },
              "osDisk": {
                "name": "osdisk",
                "vhd": {
                  "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','devosdisk', copyIndex(), '.vhd')]"
                },
                "caching": "ReadWrite",
                "createOption": "FromImage"
              }
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('devnic', copyindex()))]"
                }
              ]
            }
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "[concat('testvm', copyIndex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "virtualMachineLoop",
            "count": "[parameters('testNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', 'testnic', copyindex())]",
            "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
          ],
          "properties": {
            "hardwareProfile": {
              "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
              "computername": "[concat('testvm', copyIndex())]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "[parameters('imagePublisher')]",
                "offer": "[parameters('imageOffer')]",
                "sku": "[parameters('imageSKU')]",
                "version": "latest"
              },
              "osDisk": {
                "name": "osdisk",
                "vhd": {
                  "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','testosdisk', copyIndex(), '.vhd')]"
                },
                "caching": "ReadWrite",
                "createOption": "FromImage"
              }
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('testnic', copyindex()))]"
                }
              ]
            }
          }
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "[concat('buildvm', copyIndex())]",
          "location": "[parameters('location')]",
          "copy": {
            "name": "virtualMachineLoop",
            "count": "[parameters('buildNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', 'buildnic', copyindex())]",
            "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
          ],
          "properties": {
            "hardwareProfile": {
              "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
              "computername": "[concat('buildvm', copyIndex())]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "[parameters('imagePublisher')]",
                "offer": "[parameters('imageOffer')]",
                "sku": "[parameters('imageSKU')]",
                "version": "latest"
              },
              "osDisk": {
                "name": "osdisk",
                "vhd": {
                  "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','buildosdisk', copyIndex(), '.vhd')]"
                },
                "caching": "ReadWrite",
                "createOption": "FromImage"
              }
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('buildnic', copyindex()))]"
                }
              ]
            }
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat('devvm',copyindex(),'/devvmextension')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[parameters('location')]",
          "copy": {
            "name": "extensionLoop",
            "count": "[parameters('devNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'devvm',copyindex())]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "1.9",
            "settings": {
              "ModulesUrl": "[parameters('devmodulesUrl')]",
              "SasToken": "",
              "ConfigurationFunction": "[parameters('devconfigurationFunction')]",
              "Properties": {
                "MachineName": "[concat('devvm',copyindex())]"
              }
            },
            "protectedSettings": null
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat('testvm',copyindex(),'/testvmextension')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[parameters('location')]",
          "copy": {
            "name": "extensionLoop",
            "count": "[parameters('testNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'testvm',copyindex())]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "1.9",
            "settings": {
              "ModulesUrl": "[parameters('testmodulesUrl')]",
              "SasToken": "",
              "ConfigurationFunction": "[parameters('testconfigurationFunction')]",
              "Properties": {
                "MachineName": "[concat('testvm',copyindex())]"
              }
            },
            "protectedSettings": null
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat('buildvm',copyindex(),'/buildvmextension')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[parameters('location')]",
          "copy": {
            "name": "extensionLoop",
            "count": "[parameters('buildNumberOfInstances')]"
          },
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'buildvm',copyindex())]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "1.9",
            "settings": {
              "ModulesUrl": "[parameters('buildmodulesUrl')]",
              "SasToken": "",
              "ConfigurationFunction": "[parameters('buildconfigurationFunction')]",
              "Properties": {
                "MachineName": "[concat('buildvm',copyindex())]"
              }
            },
            "protectedSettings": null
          }
        }
      ]
    },
    "mode": "incremental",
    "parameters": {
      "newStorageAccountName": {
        "value": "multiplevmstore"
      },
      "adminUsername": {
        "value": "sampra"
      },
      "adminPassword": {
        "value": "Applegr8"
      },
      "location": {
        "value": "West US"
      },
      "vmSize": {
        "value": "Standard_D1"
      }
    }
  }
  } 